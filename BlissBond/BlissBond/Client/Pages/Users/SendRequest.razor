@page "/users/create/signin/requests/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="request-page">
    <h3>Requests</h3>
    <AuthorizeView>
        <Authorized>
            @if (Users == null)
            {
                <p>Loading matches...</p>
            }
            else
            {
                <div class="user-id-display">Logged-in User ID: @id</div>
                <div class="request-table-container">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th></th> <!-- Empty header for the request button column -->
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Users)
                            {
                                <tr>
                                    <td>@user.FirstName</td>
                                    <td>@user.LastName</td>
                                    <td>
                                        <button class="btn-request" @onclick="() => Requestsend(id, user.Id)">
                                            Request
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </Authorized>
    </AuthorizeView>
</div>

@code {
    [Parameter] public int id { get; set; }
    private List<User>? Users;

    Request request = new Request();


    protected async override Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<User>>($"{Endpoints.UsersEndpoint}");
    }

    private async Task Requestsend(int requesterUserId, int targetUserId)
    {
        // Set the requester's ID (logged-in user's ID) in the request object
        request.RequestorId = requesterUserId;
       
        // Set the target user's ID in the request object
        request.RecieverId = targetUserId;

        // Call your logic to send the request using the request object
        await _client.PostAsJsonAsync(Endpoints.RequestsEndpoint, request);
    }

    
}