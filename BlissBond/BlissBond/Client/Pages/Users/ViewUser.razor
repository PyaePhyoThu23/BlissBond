@page "/users/view/{id:int}"
@inject HttpClient _client

<div class="profile-container">
   

    @if (user != null)
    {
        <div class="profile-header">
            @if (user.ProfilePictureData != null && user.ProfilePictureData.Length > 0)
            {
                <img src="data:image/jpeg;base64,@Convert.ToBase64String(user.ProfilePictureData)" alt="Profile Picture" class="profile-picture" />
            }
            else
            {
                <i class="oi oi-person default-profile-picture"></i>
            }
            <div class="profile-info">
                <p><i class="profile-icon oi oi-person"></i><strong>Name:</strong> @user.FirstName @user.LastName</p>
                <p><i class="profile-icon oi oi-brightness"></i><strong>Gender:</strong> @user.Gender</p>
                <!-- ... other fields ... -->
            </div>
        </div>
        <div class="profile-details">
            <p><i class="profile-icon oi oi-book"></i><strong>Bio:</strong> @user.Bio</p>
            <p><i class="profile-icon oi oi-tag"></i><strong>Nickname:</strong> @user.Nickname</p>
            <p><i class="profile-icon oi oi-map-marker"></i><strong>Location:</strong> @user.Location</p>
            <p><i class="profile-icon oi oi-star"></i><strong>Hobby</strong> @user.Hobby</p>
            <!-- ... other fields ... -->
        </div>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    [Parameter] public int id { get; set; }
    private User? user;

    protected override async Task OnInitializedAsync()
    {
        user = await _client.GetFromJsonAsync<User>($"{Endpoints.UsersEndpoint}/{id}");
    }
}
