@page "/users/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime js
@attribute [Authorize]



<section class="vh-100 bg-gradient-custom">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-8 col-lg-6 col-xl-5">
                <div class="card shadow-2-strong" style="border-radius: 1rem;">
                    <div class="card-body p-5 text-center">

                        <h3 class="mb-5">Sign Up</h3>

                        <EditForm Model="@user" OnValidSubmit="CreateUser" class="text-start">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <!-- FirstName -->
                            <div class="form-outline mb-4">
                                <label class="form-label">Your First Name</label>
                                <InputText @bind-Value="@user.FirstName" class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => user.FirstName)" />
                            </div>

                            <!-- LastName -->
                            <div class="form-outline mb-4">
                                <label class="form-label">Your Last Name</label>
                                <InputText @bind-Value="@user.LastName" class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => user.LastName)" />
                            </div>

                            <!-- Gender -->
                            <div class="form-outline mb-4">
                                <label class="form-label">Your Gender</label>
                                <InputText @bind-Value="@user.Gender" class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => user.Gender)" />
                            </div>

                            <!-- Email -->
                            <div class="form-outline mb-4">
                                <label class="form-label">Your Email</label>
                                <InputText @bind-Value="@user.Email" class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => user.Email)" />
                            </div>

                            <!-- Password -->
                            <div class="form-outline mb-4">
                                <label class="form-label">Password</label>
                                <InputText type="password" @bind-Value="@user.Password" class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => user.Password)" />
                            </div>

                            <!-- Submit Button -->
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary btn-lg">Register</button>
                                <a href="/users/create/signin" class="btn btn-secondary btn-lg">Log In</a>
                            </div>
                        </EditForm>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    User user = new User();

    private async Task CreateUser()
    {
        await _client.PostAsJsonAsync(Endpoints.UsersEndpoint, user);
        _navManager.NavigateTo("/users/create/");
    }
}

